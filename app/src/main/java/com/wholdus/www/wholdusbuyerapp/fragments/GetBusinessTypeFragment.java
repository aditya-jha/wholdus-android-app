package com.wholdus.www.wholdusbuyerapp.fragments;import android.content.BroadcastReceiver;import android.content.Context;import android.content.Intent;import android.content.IntentFilter;import android.os.Bundle;import android.support.annotation.Nullable;import android.support.v4.app.Fragment;import android.support.v4.app.LoaderManager;import android.support.v4.content.Loader;import android.support.v4.content.LocalBroadcastManager;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.RadioButton;import android.widget.RadioGroup;import android.widget.Toast;import com.wholdus.www.wholdusbuyerapp.R;import com.wholdus.www.wholdusbuyerapp.interfaces.OnBoardingListenerInterface;import com.wholdus.www.wholdusbuyerapp.loaders.BusinessTypeLoader;import com.wholdus.www.wholdusbuyerapp.models.BusinessTypes;import com.wholdus.www.wholdusbuyerapp.services.UserService;import java.util.ArrayList;/** * Created by kaustubh on 16/1/17. */public class GetBusinessTypeFragment extends Fragment implements LoaderManager.LoaderCallbacks<ArrayList<BusinessTypes>> {    private OnBoardingListenerInterface mListener;    private BroadcastReceiver mUserServiceResponseReceiver;    private ArrayList<BusinessTypes> mBusinessTypes;    private RadioGroup mBusinessTypeRadioGroup;    private final int BUSINESS_TYPE_DB_LOADER = 1100;    private int mSelectedPostion = -1;    public GetBusinessTypeFragment() {    }    @Override    public void onAttach(Context context) {        super.onAttach(context);        try {            mListener = (OnBoardingListenerInterface) context;        } catch (ClassCastException cee) {            cee.printStackTrace();        }    }    @Override    public void onCreate(@Nullable Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        mUserServiceResponseReceiver = new BroadcastReceiver() {            @Override            public void onReceive(Context context, Intent intent) {                handleAPIResponse(intent);            }        };    }    @Nullable    @Override    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {        ViewGroup rootView = (ViewGroup) inflater.inflate(R.layout.fragment_get_business_type, container, false);        initReferences(rootView);        fetchDataFromServer();        return rootView;    }    @Override    public void onResume() {        super.onResume();        mListener.fragmentCreated("Business Type", false);        getActivity().getSupportLoaderManager().restartLoader(BUSINESS_TYPE_DB_LOADER, null, this);        IntentFilter intentFilter = new IntentFilter(getString(R.string.user_data_updated));        LocalBroadcastManager.getInstance(getContext()).registerReceiver(mUserServiceResponseReceiver, intentFilter);        if (mBusinessTypes.isEmpty()) {            mListener.changeProgressBarState(true);        }        if (getArguments() != null && mBusinessTypes.isEmpty()) {            mSelectedPostion = getArguments().getInt("businessTypeSelectedPosition", -1);        }    }    @Override    public void onPause() {        super.onPause();        try {            LocalBroadcastManager.getInstance(getContext()).unregisterReceiver(mUserServiceResponseReceiver);        } catch (Exception e) {        }    }    @Override    public void onStop() {        super.onStop();    }    @Override    public void onDetach() {        super.onDetach();        mListener = null;    }    @Override    public void onDestroy() {        super.onDestroy();        mUserServiceResponseReceiver = null;    }    private void initReferences(ViewGroup view) {        mBusinessTypeRadioGroup = (RadioGroup) view.findViewById(R.id.business_type_radio_group);        mBusinessTypes = new ArrayList<>();        mBusinessTypeRadioGroup.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {            @Override            public void onCheckedChanged(RadioGroup radioGroup, int i) {                mSelectedPostion = i;            }        });    }    public void setViewForData(ArrayList<BusinessTypes> data) {        mBusinessTypes.clear();        mBusinessTypes.addAll(data);        for (int i = 0; i < mBusinessTypes.size(); i++) {            BusinessTypes businessType = mBusinessTypes.get(i);            RadioButton radioButton = new RadioButton(getContext());            int padding = getContext().getResources().getDimensionPixelSize(R.dimen.activity_horizontal_margin);            radioButton.setPadding(padding, padding, padding, padding);            radioButton.setLayoutParams(new RadioGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));            radioButton.setText(businessType.getBusinessType());            radioButton.setId(i);            mBusinessTypeRadioGroup.addView(radioButton);        }        if (mSelectedPostion != -1 && mSelectedPostion < mBusinessTypes.size()) {            ((RadioButton) mBusinessTypeRadioGroup.getChildAt(mSelectedPostion)).setChecked(true);        }        mListener.changeProgressBarState(false);    }    @Override    public void onLoaderReset(Loader<ArrayList<BusinessTypes>> loader) {    }    @Override    public Loader<ArrayList<BusinessTypes>> onCreateLoader(int id, Bundle args) {        return new BusinessTypeLoader(getContext());    }    @Override    public void onLoadFinished(Loader<ArrayList<BusinessTypes>> loader, ArrayList<BusinessTypes> data) {        if (data != null && mBusinessTypes.isEmpty() && mListener != null) {            setViewForData(data);        }    }    private void handleAPIResponse(Intent intent) {        if (mBusinessTypes.isEmpty()) {            getActivity().getSupportLoaderManager().restartLoader(BUSINESS_TYPE_DB_LOADER, null, this);        }    }    private void fetchDataFromServer() {        Intent businessTypesIntent = new Intent(getContext(), UserService.class);        businessTypesIntent.putExtra("TODO", R.string.fetch_business_types);        getContext().startService(businessTypesIntent);    }    public void updateBusinessType() {        if (mSelectedPostion != -1) {            Intent intent = new Intent(getContext(), UserService.class);            intent.putExtra("TODO", R.string.update_buyer_type);            intent.putExtra(getString(R.string.business_type_key), String.valueOf(mBusinessTypes.get(mSelectedPostion).getBusinessTypeID()));            getContext().startService(intent);            mListener.businessTypeSaved(mSelectedPostion);        } else {            Toast.makeText(getContext(), "Please select a value", Toast.LENGTH_SHORT).show();        }    }}